<?php
$a["class"]['QBaseClass'] = '\\QCubed\\ObjectBase';
$a["class"]['QCryptography'] = '\\QCubed\\Cryptography';
$a["const"]["QCubed\\Cryptography::IvRandom"] = "QCubed\\Cryptography::IV_RANDOM";
$a["class"]['QDateTimeSpan'] = '\\QCubed\\DateTimeSpan';
$a["const"]["QCubed\\DateTimeSpan::SecondsPerYear"] = "QCubed\\DateTimeSpan::SECONDS_PER_YEAR";
$a["const"]["QCubed\\DateTimeSpan::SecondsPerMonth"] = "QCubed\\DateTimeSpan::SECONDS_PER_MONTH";
$a["const"]["QCubed\\DateTimeSpan::SecondsPerDay"] = "QCubed\\DateTimeSpan::SECONDS_PER_DAY";
$a["const"]["QCubed\\DateTimeSpan::SecondsPerHour"] = "QCubed\\DateTimeSpan::SECONDS_PER_HOUR";
$a["const"]["QCubed\\DateTimeSpan::SecondsPerMinute"] = "QCubed\\DateTimeSpan::SECONDS_PER_MINUTE";
$a["class"]['QCallerException'] = '\\QCubed\\Exception\\Caller';
$a["class"]['QCryptographyException'] = '\\QCubed\\Exception\\Cryptography';
$a["class"]['QIndexOutOfRangeException'] = '\\QCubed\\Exception\\IndexOutOfRange';
$a["class"]['QInvalidArgumentException'] = '\\QCubed\\Exception\\InvalidArgument';
$a["class"]['QInvalidCastException'] = '\\QCubed\\Exception\\InvalidCast';
$a["class"]['QUndefinedMethodException'] = '\\QCubed\\Exception\\UndefinedMethod';
$a["class"]['QUndefinedPropertyException'] = '\\QCubed\\Exception\\UndefinedProperty';
$a["class"]['QFile'] = '\\QCubed\\File';
$a["class"]['QFolder'] = '\\QCubed\\Folder';
$a["class"]['QJsClosure'] = '\\QCubed\\Js\\Closure';
$a["class"]['QJsFunction'] = '\\QCubed\\Js\\Func';
$a["class"]['JavaScriptHelper'] = '\\QCubed\\Js\\Helper';
$a["const"]["QCubed\\Js\\Helper::JsonObjectType"] = "QCubed\\Js\\Helper::JSON_OBJECT_TYPE";
$a["class"]['QJsNoQuoteKey'] = '\\QCubed\\Js\\NoQuoteKey';
$a["class"]['QJsParameterList'] = '\\QCubed\\Js\\ParameterList';
$a["class"]['QJsVarName'] = '\\QCubed\\Js\\VarName';
$a["const"]["QCubed\\QCubed::JsonObjectType"] = "QCubed\\QCubed::JSON_OBJECT_TYPE";
$a["const"]["QCubed\\QCubed::NamedValueDelimiter"] = "QCubed\\QCubed::NAMED_VALUE_DELIMITER";
$a["class"]['QDateTime'] = '\\QCubed\\QDateTime';
$a["const"]["QCubed\\QDateTime::Now"] = "QCubed\\QDateTime::NOW";
$a["const"]["QCubed\\QDateTime::FormatIso"] = "QCubed\\QDateTime::FORMAT_ISO";
$a["const"]["QCubed\\QDateTime::FormatIsoCompressed"] = "QCubed\\QDateTime::FORMAT_ISO_COMPRESSED";
$a["const"]["QCubed\\QDateTime::FormatDisplayDate"] = "QCubed\\QDateTime::FORMAT_DISPLAY_DATE";
$a["const"]["QCubed\\QDateTime::FormatDisplayDateFull"] = "QCubed\\QDateTime::FORMAT_DISPLAY_DATE_FULL";
$a["const"]["QCubed\\QDateTime::FormatDisplayDateTime"] = "QCubed\\QDateTime::FORMAT_DISPLAY_DATE_TIME";
$a["const"]["QCubed\\QDateTime::FormatDisplayDateTimeFull"] = "QCubed\\QDateTime::FORMAT_DISPLAY_DATE_TIME_FULL";
$a["const"]["QCubed\\QDateTime::FormatDisplayTime"] = "QCubed\\QDateTime::FORMAT_DISPLAY_TIME";
$a["const"]["QCubed\\QDateTime::FormatRfc822"] = "QCubed\\QDateTime::FORMAT_RFC_822";
$a["const"]["QCubed\\QDateTime::FormatRfc5322"] = "QCubed\\QDateTime::FORMAT_RFC_5322";
$a["const"]["QCubed\\QDateTime::FormatSoap"] = "QCubed\\QDateTime::FORMAT_SOAP";
$a["const"]["QCubed\\QDateTime::UnknownType"] = "QCubed\\QDateTime::UNKNOWN_TYPE";
$a["const"]["QCubed\\QDateTime::DateOnlyType"] = "QCubed\\QDateTime::DATE_ONLY_TYPE";
$a["const"]["QCubed\\QDateTime::TimeOnlyType"] = "QCubed\\QDateTime::TIME_ONLY_TYPE";
$a["const"]["QCubed\\QDateTime::DateAndTimeType"] = "QCubed\\QDateTime::DATE_AND_TIME_TYPE";
$a["const"]["QCubed\\QDateTime::Atom"] = "QCubed\\QDateTime::ATOM";
$a["const"]["QCubed\\QDateTime::Cookie"] = "QCubed\\QDateTime::COOKIE";
$a["const"]["QCubed\\QDateTime::Iso8601"] = "QCubed\\QDateTime::ISO8601";
$a["const"]["QCubed\\QDateTime::Rfc822"] = "QCubed\\QDateTime::RFC822";
$a["const"]["QCubed\\QDateTime::Rfc850"] = "QCubed\\QDateTime::RFC850";
$a["const"]["QCubed\\QDateTime::Rfc1036"] = "QCubed\\QDateTime::RFC1036";
$a["const"]["QCubed\\QDateTime::Rfc1123"] = "QCubed\\QDateTime::RFC1123";
$a["const"]["QCubed\\QDateTime::Rfc2822"] = "QCubed\\QDateTime::RFC2822";
$a["const"]["QCubed\\QDateTime::Rfc3339"] = "QCubed\\QDateTime::RFC3339";
$a["const"]["QCubed\\QDateTime::Rfc3339Extended"] = "QCubed\\QDateTime::RFC3339_EXTENDED";
$a["const"]["QCubed\\QDateTime::Rss"] = "QCubed\\QDateTime::RSS";
$a["const"]["QCubed\\QDateTime::W3c"] = "QCubed\\QDateTime::W3C";
$a["class"]['QString'] = '\\QCubed\\QString';
$a["const"]["QCubed\\Test\\HtmlReporter::EventTestStart"] = "QCubed\\Test\\HtmlReporter::EVENT_TEST_START";
$a["const"]["QCubed\\Test\\HtmlReporter::EventTestEnd"] = "QCubed\\Test\\HtmlReporter::EVENT_TEST_END";
$a["const"]["QCubed\\Test\\HtmlReporter::EventTestsuiteStart"] = "QCubed\\Test\\HtmlReporter::EVENT_TESTSUITE_START";
$a["const"]["QCubed\\Test\\HtmlReporter::EventTestsuiteEnd"] = "QCubed\\Test\\HtmlReporter::EVENT_TESTSUITE_END";
$a["const"]["QCubed\\Test\\HtmlReporter::ColorNever"] = "QCubed\\Test\\HtmlReporter::COLOR_NEVER";
$a["const"]["QCubed\\Test\\HtmlReporter::ColorAuto"] = "QCubed\\Test\\HtmlReporter::COLOR_AUTO";
$a["const"]["QCubed\\Test\\HtmlReporter::ColorAlways"] = "QCubed\\Test\\HtmlReporter::COLOR_ALWAYS";
$a["const"]["QCubed\\Test\\HtmlReporter::ColorDefault"] = "QCubed\\Test\\HtmlReporter::COLOR_DEFAULT";
$a["class"]['QUnitTestCaseBase'] = '\\QCubed\\Test\\UnitTestCaseBase';
$a["class"]['QTimer'] = '\\QCubed\\Timer';
$a["class"]['QType'] = '\\QCubed\\Type';
$a["const"]["QCubed\\Type::String"] = "QCubed\\Type::STRING";
$a["const"]["QCubed\\Type::Integer"] = "QCubed\\Type::INTEGER";
$a["const"]["QCubed\\Type::Float"] = "QCubed\\Type::FLOAT";
$a["const"]["QCubed\\Type::Boolean"] = "QCubed\\Type::BOOLEAN";
$a["const"]["QCubed\\Type::Object"] = "QCubed\\Type::OBJECT";
$a["const"]["QCubed\\Type::ArrayType"] = "QCubed\\Type::ARRAY_TYPE";
$a["const"]["QCubed\\Type::DateTime"] = "QCubed\\Type::DATE_TIME";
$a["const"]["QCubed\\Type::Resource"] = "QCubed\\Type::RESOURCE";
$a["const"]["QCubed\\Type::CallableType"] = "QCubed\\Type::CALLABLE_TYPE";
$a["const"]["QCubed\\Type::Association"] = "QCubed\\Type::ASSOCIATION";
$a["const"]["QCubed\\Type::ReverseReference"] = "QCubed\\Type::REVERSE_REFERENCE";
$a["const"]["QCubed\\Type::NoOp"] = "QCubed\\Type::NO_OP";
$a["const"]["QCubed\\Type::CheckOnly"] = "QCubed\\Type::CHECK_ONLY";
$a["const"]["QCubed\\Type::CastOnly"] = "QCubed\\Type::CAST_ONLY";
$a["const"]["QCubed\\Type::CheckAndCast"] = "QCubed\\Type::CHECK_AND_CAST";
return $a;
